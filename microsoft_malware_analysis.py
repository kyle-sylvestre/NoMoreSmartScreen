from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
from selenium.webdriver import ActionChains
from selenium.webdriver.remote.remote_connection import LOGGER

from selenium import webdriver
from selenium.common.exceptions import NoSuchElementException

import time
import sys
import os

if len(sys.argv) != 2:
    sys.exit("usage: python microsoft_malware_analysis.py [path to executable here]")

filepath = sys.argv[1]
if not os.path.exists(filepath):
    sys.exit("file not found: " + filepath)
if not os.path.isfile(filepath):
    sys.exit("not a file: " + filepath)

msft_email = os.getenv("MSFT_EMAIL")
msft_password = os.getenv("MSFT_PASSWORD")
msft_company = os.getenv("MSFT_COMPANY")
webdriver_path = "[enter webdriver path here]"

filepath = os.path.realpath(filepath)
head, filename = os.path.split(filepath)
print("using file: " + filepath)
driver = webdriver.Edge(executable_path=webdriver_path)

def get_element(css_selector):
    try:
        err = WebDriverWait(driver, timeout=5).until(EC.presence_of_element_located((By.CSS_SELECTOR, css_selector)))
        return driver.find_element(By.CSS_SELECTOR, css_selector)
    except:
        sys.exit("timeout for css selector: " + css_selector)

def click_element(css_selector):
    try:
        err = WebDriverWait(driver, timeout=5).until(EC.element_to_be_clickable((By.CSS_SELECTOR, css_selector)))
        elem = driver.find_element(By.CSS_SELECTOR, css_selector)
        elem.click()
    except:
        sys.exit("timeout for css selector: " + css_selector)

# click Software developer then Continue
driver.get("https://www.microsoft.com/en-us/wdsi/filesubmission")
click_element('button[id=SelectSoftwareDeveloper]')
click_element('button[id=btnTypeSelectedContinue]')

# wait to be signed in automatically
try:
    err = WebDriverWait(driver, timeout=5).until(EC.element_to_be_clickable((By.CSS_SELECTOR, "input[id=comboMsProduct]")))
except:
    # browser didn't remember last login
    # enter email, hit next
    email = get_element('input[type=email]')
    email.clear()
    email.send_keys(msft_email)
    click_element("input[id=idSIButton9]")

    # enter password, hit next
    time.sleep(1)
    password = get_element('input[type=password]')
    password.clear()
    password.send_keys(msft_password)
    click_element("input[id=idSIButton9]")

    # press no when prompted to remember email/password
    click_element("input[id=idBtn_Back]")


# Select the Microsoft security product used to scan the file *
time.sleep(1) # click_element not waiting for'Microsoft Defender Smartscreen'
click_element("input[id=comboMsProduct]")
click_element("[aria-label='Microsoft Defender Smartscreen']")

# Company Name *
company_name = get_element("input[id=CompanyName]")
company_name.clear()
company_name.send_keys(msft_company)

# Submit File Dialog
file_input = get_element("input[type=file]")
file_input.send_keys(filepath)

# Detection name *
detection_name = get_element("input[id=detectionName]")
detection_name.clear()
detection_name.send_keys(filename)

# radio button for "Incorrectly detected as malware/malicious"
spans = driver.find_elements(By.CSS_SELECTOR, "span[role='radio']")
spans[12].click()

# Additional information *
additional_info = get_element("[id=textareaAddComments]")
additional_info.clear()
additional_info.send_keys("smartscreen is blocking my application")

# Continue button at the bottom of form
click_element('button[id=btnFormCompletedContinue]')

# Submit button on confirmation form
click_element('button[id=btnSubmitForm]')

# Upload the file, wait for "Rescan Submission" button to appear
try:
    err = WebDriverWait(driver, timeout=60).until(EC.presence_of_element_located((By.CSS_SELECTOR, "[id=RescanButton]")))
except:
    sys.exit("failed to locate Rescan Button")

driver.quit()
